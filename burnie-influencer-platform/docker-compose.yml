version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: roastpower-postgres
    environment:
      POSTGRES_DB: roastpower
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - roastpower-network

  redis:
    image: redis:7-alpine
    container_name: roastpower-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - roastpower-network

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: roastpower-backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/roastpower
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/__pycache__
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - roastpower-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: roastpower-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - roastpower-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  roastpower-network:
    driver: bridge 